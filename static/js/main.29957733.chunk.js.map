{"version":3,"sources":["images/character.svg","containers/NavBar/NavBar.js","actions/index.js","utils/apiCalls/apiCalls.js","containers/BigCard/BigCard.js","containers/SmallCard/SmallCard.js","containers/CardContainer/CardContainer.js","containers/FavoriteCardContainer/FavoriteCardContainer.js","containers/UserForm/UserForm.js","containers/Signout/Signout.js","containers/App/App.js","API/APIkey.js","utils/cleaners/cleanMovies.js","serviceWorker.js","reducers/moviesReducer.js","reducers/currMovieReducer.js","reducers/isLoadingReducer.js","reducers/errorMessageReducer.js","reducers/index.js","reducers/userReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","connect","state","user","props","userIcon","userLink","name","react_default","a","createElement","className","react_router_dom","to","onClick","handleClick","exact","window","alert","errorMessage","type","toggleFavorite","id","deleteFavoriteFetch","user_id","movie_id","url","concat","fetch","method","then","response","ok","Error","agnosticFetch","init","json","BigCard","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFavorite","e","preventDefault","console","log","movie","isFavorite","removeFavorite","addFavorite","asyncToGenerator","regenerator_default","mark","_callee","_this$props","setErrorMessage","wrap","_context","prev","next","_unused","stop","_callee2","_this$props2","_this$props$movie","title","summary","poster","release","rating","_context2","headers","Content-Type","body","JSON","stringify","overview","poster_path","release_date","vote_average","sent","t0","inherits","createClass","key","value","_this$props$movie2","backdrop","genres","favClass","react_router","src","alt","Component","currMovie","dispatch","message","SmallCard","_this2","grabCurrMovie","slice","path","render","_ref3","match","containers_BigCard_BigCard","movies","CardContainer","smallCards","length","map","containers_SmallCard_SmallCard","butterflixMascot","_ref","filter","UserForm","handleChange","_e$target","target","setState","defineProperty","fetchFavorites","favorites","data","setFavorites","_x","apply","arguments","handleLogin","createInit","result","successfulLogin","loginUser","catch","error","handleSignup","_ref2","newUser","isLoading","email","password","_x2","onSubmit","onChange","placeholder","maxLength","bool","Signout","handleSubmit","loggedOut","signoutUser","App","list","results","backdrop_path","cleanFetchMovies","cleanMovies","addMovies","containers_NavBar_NavBar","component","FavoriteCardContainer","Boolean","location","hostname","moviesReducer","undefined","action","toConsumableArray","forEach","favorite","currMovieReducer","objectSpread","isLoadingReducer","errorMessageReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","router","containers_App_App","ReactDOM","es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29957733.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/character.054c9f72.svg\";","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport const NavBar =(props)=> {\n\n  let {name} = props.user;\n  let userIcon;\n  let userLink;\n\n  if (name) {\n    userIcon = 'fas signin-icon fa-user-minus';\n    userLink = '/signout';\n  } else {\n    userIcon = 'fas signin-icon fa-user-plus';\n    userLink = '/login';\n  }\n\n  return (\n    <nav className=\"NavBar\">\n        <article className=\"user--content\">\n        <NavLink \n          to={userLink}\n          onClick={props.handleClick} className=\"NavBar-Signout\">\n          <i className={userIcon}></i>\n          {!name && <h4>Please Signin</h4>}\n          {name && <h4>Hi, {name}</h4>}\n        </NavLink>  \n        </article>\n      <section className=\"NavButton--container\">\n        <NavLink exact to=\"/\" className=\"NavBar-links\">In Theaters</NavLink>\n        <NavLink to=\"/favorites\" className=\"NavBar-links\">Favorites</NavLink>\n        <button onClick={()=> window.alert('Feature Coming Soon')}>Latest Movies</button>\n        <button onClick={()=> window.alert('Feature Coming Soon')}>History</button>\n        <button onClick={()=> window.alert('Feature Coming Soon')}>Watch List</button>\n      </section>\n    </nav>\n  )\n}\n\nNavBar.propTypes={\n  dispatch: PropTypes.func,\n  user: PropTypes.object\n}\n\n\nexport const mapStateToProps =(state)=>({\n  user: state.user\n});\n\n\nexport default connect(mapStateToProps)(NavBar);","export const addMovies = (movies) => ({\n  type: \"FETCH_MOVIES\",\n  movies\n});\n\nexport const grabCurrMovie = (movie) => ({\n  type: \"GRAB_MOVIE\",\n  movie\n});\n\nexport const isLoading = (isLoading) => ({\n  type: \"IS_LOADING\",\n  isLoading\n});\n\nexport const errorMessage = (errorMessage) => ({\n  type: \"SET_ERROR_MESSAGE\",\n  errorMessage\n});\n\nexport const toggleFavorite = (id) => ({\n  type: \"TOGGLE_FAVORITE\",\n  id\n}); \n        \nexport const loginUser = (user) => ({\n  type: \"LOGIN_USER\",\n  user\n});\n        \nexport const signoutUser =()=>({\n  type: \"SIGNOUT_USER\"\n});\n\nexport const setFavorites = (favorites) => ({\n  type: \"SET_FAVORITES\",\n  favorites\n});","import { APIkey } from '../../API/APIkey.js'\n\nexport const fetchMovies = () => {\n  const url = 'https://api.themoviedb.org/3/movie/'\n  return fetch(`${url}now_playing${APIkey}`)\n  .then(response => {\n    if (!response.ok) {\n      throw Error('Error in fetching films');\n    } else {\n      return response.json();\n    };\n  })\n};\n\nexport const deleteFavoriteFetch = (user_id, movie_id) => {\n  const url = `http://localhost:3000/api/users/${user_id}/favorites/${movie_id}`;\n  const init = { method: 'DELETE' }\n  return fetch(url, init) \n  .then(response => {\n    if (!response.ok) {\n      throw Error('Error in deleting favorite')\n    };\n  })\n};\n\nexport const agnosticFetch = (url, init) => {\n  return fetch(url, init)\n  .then(response => {\n    if (!response.ok) {\n      throw Error(response)\n    } else {\n      return response.json()\n    };\n  })\n};\n\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {NavLink, Redirect} from 'react-router-dom';\nimport { toggleFavorite, errorMessage } from \"../../actions\";\nimport {\n  deleteFavoriteFetch,\n  agnosticFetch\n} from \"../../utils/apiCalls/apiCalls\";\n\nexport class BigCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleFavorite = e => {\n    e.preventDefault();\n    console.log(this.props.movie);\n    let { isFavorite } = this.props.movie;\n    if (!isFavorite) {\n      console.log('add')\n      this.addFavorite();\n    } else {\n      console.log(\"remove\");\n      this.removeFavorite();\n    }\n  };\n\n  removeFavorite = async () => {\n    let { user, toggleFavorite, setErrorMessage } = this.props;\n    let { id } = this.props.movie;\n    try {\n      const response = deleteFavoriteFetch(user.id, id);\n      toggleFavorite(id);\n    } catch {\n      setErrorMessage(\"Error in deleting favorite\");\n    }\n  };\n\n  addFavorite = async () => {\n    let { user, toggleFavorite, setErrorMessage } = this.props;\n    let {\n      title,\n      id,\n      summary,\n      poster,\n      release,\n      rating\n    } = this.props.movie;\n    const url = \"http://localhost:3000/api/users/favorites/new\";\n    const init = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        title: title,\n        user_id: user.id,\n        movie_id: id,\n        overview: summary,\n        poster_path: poster,\n        release_date: release,\n        vote_average: rating\n      })\n    };\n    try {\n      const result = await agnosticFetch(url, init);\n      toggleFavorite(id);\n    } catch {\n      setErrorMessage(\"Please sign in to favorite\");\n      window.alert(this.props.errorMessage);\n    }\n  };\n\n  render() {\n    let {\n      title,\n      backdrop,\n      summary,\n      genres,\n      rating,\n      release,\n      isFavorite,\n    } = this.props.movie;\n    let favClass = `${isFavorite}`;\n\n    if (this.props.movie === {}) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <main>\n        <section className=\"BigCard\">\n          {backdrop && (\n            <img\n              className=\"backdrop\"\n              src={backdrop}\n              alt=\"Backdrop Unavailable\"\n            />\n          )}\n          <article className=\"big-content\">\n            {title && <h2>{title}</h2>}\n            {release && <h4>{release}</h4>}\n            <div className=\"big-subcontent\">\n              {summary && <p>{summary}</p>}\n              {genres && <p>{genres}</p>}\n            </div>\n            {rating && <h3>Avg Score: {rating}</h3>}\n          </article>\n          <button className=\"faveBtn\" onClick={this.handleFavorite}>\n            <i className={`fas fa-star fave-${favClass}`} />\n          </button>\n          <NavLink to=\"/\" className=\"close\">\n            <i className=\"fas fa-times-circle\" />\n          </NavLink>\n        </section>\n      </main>\n    );\n  }\n}\n\nBigCard.propTypes = {\n  movie: PropTypes.object,\n  user: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  movie: state.currMovie,\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setErrorMessage: message => dispatch(errorMessage(message)),\n  toggleFavorite: id => dispatch(toggleFavorite(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BigCard); ","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {Route, NavLink} from 'react-router-dom';\nimport { toggleFavorite, grabCurrMovie, errorMessage } from '../../actions';\nimport BigCard from '../BigCard/BigCard';\nimport { deleteFavoriteFetch, agnosticFetch } from '../../utils/apiCalls/apiCalls'\n\nexport class SmallCard extends Component {\n  constructor(props) {\n    super();\n  }\n  \n  // let genresList;\n\n  // if (genres.length > 0) {\n  //   let lastGenre = genres.pop();\n  //   let genresString = `${genres.name.join(', ')} , and ${lastGenre.name}`;\n  //   genresList = <p>Genres: {genresString}</p>\n  // }\n  handleFavorite = (e) => {\n    e.preventDefault();\n    console.log(this.props.movie)\n    let { isFavorite } = this.props.movie;\n    if (!isFavorite) {\n      this.addFavorite();\n    } else {\n      this.removeFavorite();\n    }\n  }\n\n  removeFavorite = async () => {\n    let { user, toggleFavorite, setErrorMessage } = this.props;\n    let { id } = this.props.movie\n    try {\n      const response = deleteFavoriteFetch(user.id, id)\n      toggleFavorite(id);\n    } catch {\n      setErrorMessage('Error in deleting favorite');\n    }\n  }\n\n  addFavorite = async () => {\n    let { user, toggleFavorite, setErrorMessage } = this.props;\n    let { title, id, summary, poster, release, rating } = this.props.movie;\n    const url = 'http://localhost:3000/api/users/favorites/new';\n    const init = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        title: title,\n        user_id: user.id,\n        movie_id: id,\n        overview: summary,\n        poster_path: poster,\n        release_date: release,\n        vote_average: rating\n      })\n    }\n    try {\n      const result = await agnosticFetch(url, init)\n      toggleFavorite(id)\n    } catch {\n      setErrorMessage('Please sign in to favorite')\n      window.alert(this.props.errorMessage)\n    }\n  }\n\n  render() {\n    let { movie } = this.props\n    let { title, id, summary, poster, rating, isFavorite } = this.props.movie;\n    let favClass = `${isFavorite}`;\n\n    return (\n      <NavLink className=\"small-link\" to={`/movie/${id}`}>\n        <article\n          className=\"SmallCard\"\n          onClick={() => this.props.grabCurrMovie(movie)}\n        >\n          <div className=\"image--container\">\n            {poster && <img src={poster} alt={title} />}\n          </div>\n          <div className=\"content\">\n            {title && <h3>{title}</h3>}\n            {summary && (\n              <span className=\"sub-content\">\n                <div className=\"sub-border\" />\n                <p>{summary.slice(0, 50)}</p>\n                <p className=\"showmore\">... (Show More)</p>\n              </span>\n            )}\n          </div>\n          <div className=\"rating\">{rating && <h4>{rating}</h4>}</div>\n          <button className=\"faveBtn\" onClick={this.handleFavorite}>\n            <i className={`fas fa-star fave-${favClass}`} />\n          </button>\n          <Route\n            path={`/movie/`}\n            render={({ match }) => (\n              <BigCard\n                \n                movie={this.props.movie}\n              />\n            )}\n          />\n        </article>\n      </NavLink>\n    );\n  }\n}\n\nSmallCard.propTypes={\n  errorMessage: PropTypes.string,\n  grabCurrMovie: PropTypes.func,\n  movie: PropTypes.object,\n  movies: PropTypes.array,\n  setErrorMessage: PropTypes.func,\n  toggleFavorite: PropTypes.func,\n  user: PropTypes.object\n}\n\nconst mapStateToProps = (state) => ({\n  movies: state.movies,\n  user: state.user,\n  errorMessage: state.errorMessage\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleFavorite: (id) => dispatch(toggleFavorite(id)),\n  setErrorMessage: (message) => dispatch(errorMessage(message)),\n  // will use this to update movies in state so they become favorited on click\n  // will need to update favorited movies on component did mount as well when app is first loaded\n  grabCurrMovie: (movie)=> dispatch(grabCurrMovie(movie))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SmallCard);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport SmallCard from '../SmallCard/SmallCard';\nimport butterflixMascot from '../../images/character.svg';\n\nexport class CardContainer extends Component {\n  constructor() {\n    super()\n    this.state = {\n    }\n  }\n  render() {\n    let smallCards;\n    !this.props.movies.length\n      ? smallCards = null \n      : smallCards = this.props.movies.map(movie=>\n          (<SmallCard movie={movie} key={movie.id} />)\n        )\n\n    return (\n      <main className=\"CardContainer\">\n        <header>\n          <div className=\"title\">\n            <img src={butterflixMascot} alt=\"butterflix-fairy-mascot\"/>\n            <h1>ButterFlix</h1>\n          </div>\n        </header>\n        <div className=\"display-divider\"></div>\n        <section className=\"cards-display\">\n          {smallCards}\n        </section>\n      </main>\n    )\n  }\n}\n\nCardContainer.propTypes={\n  history: PropTypes.object,\n  location: PropTypes.object,\n  match: PropTypes.object,\n  movies: PropTypes.array\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies\n})\n\nexport default connect(mapStateToProps)(CardContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport SmallCard from '../SmallCard/SmallCard';\nimport butterflixMascot from '../../images/character.svg';\n\nexport const FavoriteCardContainer = ({ movies }) => {\n  \n  let smallCards = movies\n    .filter(movie => movie.isFavorite)\n    .map(movie=> (<SmallCard movie={movie} key={movie.id} />))\n  return (\n      <main className=\"CardContainer\">\n        <header>\n          <div className=\"title\">\n            <img src={butterflixMascot} alt=\"butterflix-fairy-mascot\"/>\n            <h1>ButterFlix</h1>\n          </div>\n          <div className=\"search-icon\">\n            <i className=\"fas fa-search\"></i>\n          </div>\n        </header>\n        <div className=\"display-divider\"></div>\n        <section className=\"cards-display\">\n          {smallCards}\n        </section>\n      </main>\n  )\n}\n\nFavoriteCardContainer.propTypes={\n  dispatch: PropTypes.func,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  match: PropTypes.object,\n  movies: PropTypes.array,\n  user: PropTypes.object\n}\n\nconst mapStateToProps = (state) => ({\n  movies: state.movies,\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(FavoriteCardContainer);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport { loginUser, isLoading, errorMessage, setFavorites } from '../../actions';\nimport { agnosticFetch } from '../../utils/apiCalls/apiCalls'\n\n\nexport class UserForm extends Component {\n  constructor() {\n    super()\n    this.state= {\n      name: '',\n      email: '',\n      password: '',\n      successfulLogin: false\n    }\n  }\n\n  handleChange = (e) => {\n    let {name, value} = e.target;\n    this.setState({[name]: value});\n  }\n\n  fetchFavorites = async (id) => {\n    const url = `http://localhost:3000/api/users/${id}/favorites`\n    try {\n      const response = await agnosticFetch(url, null)\n      const favorites = await response.data\n      this.props.setFavorites(favorites)\n    } catch {\n      this.props.setErrorMessage('Error in fetching user favorites')\n    }\n  }\n\n  handleLogin = (e) =>{\n    e.preventDefault();\n    const url = 'http://localhost:3000/api/users';\n    const init = this.createInit(this.state)\n    agnosticFetch(url, init)\n      .then(result => {\n        this.setState({successfulLogin: true})\n        this.props.loginUser(result.data);\n        this.fetchFavorites(result.data.id)\n      })\n      .catch(error => {\n        this.props.setErrorMessage('Incorrect email/password combination')\n        window.alert('Incorrect email/password combination')\n      });\n  };\n\n  handleSignup = async (e) => {\n    e.preventDefault();\n    this.props.isLoading(true);\n    const url = 'http://localhost:3000/api/users/new';\n    const init = this.createInit(this.state)\n    try {\n      const result = await agnosticFetch(url, init);\n      const newUser = { \n        id: result.id, \n        name: this.state.name, \n        email: this.state.email, \n        password: this.state.password \n      };\n      this.props.loginUser(newUser)\n      this.setState({successfulLogin: true})\n    } catch (error) {\n      this.props.setErrorMessage('Email already used for an account')\n      window.alert('Email already used for an account')\n    }\n    this.props.isLoading(false)\n  };\n\n  createInit(body) {\n    const init = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(body)\n    }\n    return init\n  };\n\n  render() {\n    if (this.state.successfulLogin) {\n      return <Redirect to='/' />\n    }\n\n    return (\n      <section className=\"UserForm\">\n        <form className=\"existingUser\" onSubmit={this.handleLogin}>\n          <h2>Existing User</h2>\n          <span className=\"EU-input\">\n            <input\n              name=\"email\"\n              onChange={this.handleChange}\n              type=\"email\"\n              placeholder=\"Email@email.com\"\n            />\n            <input\n              name=\"password\"\n              onChange={this.handleChange}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </span>\n          <input className=\"user-submit\" type=\"submit\" value=\"Login\" />\n        </form>\n        <div className=\"divider\" />\n        <form className=\"newUser\" onSubmit={this.handleSignup}>\n          <h2>New User: Create Account</h2>\n          <span className=\"EU-input\">\n            <input\n              name=\"name\"\n              maxLength=\"10\"\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"Name\"\n            />\n            <input\n              name=\"email\"\n              onChange={this.handleChange}\n              type=\"email\"\n              placeholder=\"Email@email.com\"\n            />\n            <input\n              name=\"password\"\n              onChange={this.handleChange}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </span>\n          <input className=\"user-submit\" type=\"submit\" value=\"Sign-Up\" />\n        </form>\n      </section>\n    );\n  }\n}\n\nUserForm.propTypes={\n  history: PropTypes.object,\n  isLoading: PropTypes.func,\n  location: PropTypes.object,\n  loginUser: PropTypes.func,\n  match: PropTypes.object,\n  setErrorMessage: PropTypes.func,\n  setFavorites:PropTypes.func\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginUser: (user) => dispatch(loginUser(user)),\n  isLoading: (bool) => dispatch(isLoading(bool)),\n  setErrorMessage: (message) => dispatch(errorMessage(message)),\n  setFavorites: (favorites) => dispatch(setFavorites(favorites))\n});\n\nexport default connect(null, mapDispatchToProps)(UserForm)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport {signoutUser} from '../../actions';\n\nexport class Signout extends Component {\n  constructor(){\n    super()\n    this.state={\n      loggedOut: false\n    }\n  }\n\n  handleSubmit=(e)=>{\n    e.preventDefault();\n    this.setState({loggedOut: true})\n    this.props.signoutUser();\n  }\n  render() {\n    if (this.state.loggedOut) {\n      return <Redirect to='/' />\n    }\n\n    return (\n      <section className=\"Signout\">\n        <form className=\"Signout-form\" onSubmit={this.handleSubmit}>\n          <h2>Leaving so soon?</h2>\n          <div className=\"Signout-divider\"></div>\n          <span className=\"h-group\">\n            <h4>Click the button below,</h4>\n            <h4>To signout of ButterFlix</h4>\n          </span> \n          <input className=\"user-submit\" type=\"submit\" value=\"Signout\"/>\n        </form>\n      </section>\n    )\n  }\n}\n\nconst mapDispatchToProps =(dispatch)=> ({\n  signoutUser: ()=> dispatch(signoutUser())\n});\n\nexport default connect(null, mapDispatchToProps)(Signout);","import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport NavBar from '../NavBar/NavBar';\nimport CardContainer from '../CardContainer/CardContainer';\nimport BigCard from \"../BigCard/BigCard\";\nimport FavoriteCardContainer from '../FavoriteCardContainer/FavoriteCardContainer';\nimport UserForm from '../UserForm/UserForm';\nimport Signout from '../Signout/Signout';\nimport { fetchMovies } from '../../utils/apiCalls/apiCalls';\nimport { addMovies } from '../../actions';\nimport { cleanFetchMovies } from '../../utils/cleaners/cleanMovies';\n\nexport class App extends Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    fetchMovies()\n      .then(list => list.results)\n      .then(movies=> cleanFetchMovies(movies))\n      .then(cleanMovies => this.props.addMovies(cleanMovies))\n      .catch(error => console.log('Error in fetching movies from DB'))\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path='/' component={CardContainer} />\n        <Route path={`/movie/`} component={BigCard} />\n        <Route exact path='/login' component={UserForm}/>\n        <Route exact path='/signout' component={Signout}/>\n        <Route exact path='/favorites' component={FavoriteCardContainer} />\n      </div>\n    )\n  }\n}\n\n\nexport const mapDispatchToProps = (dispatch) => ({\n  addMovies: (movies) => dispatch(addMovies(movies))\n});\n\n\nexport default connect(null, mapDispatchToProps)(App);\n","export const APIkey = \"?api_key=6786193f3a2bb7eaf23822b287e4fa84\"\n\nconst apiExample = \"https://api.themoviedb.org/3/movie/550?api_key=6786193f3a2bb7eaf23822b287e4fa84\"\n\nconst apiAuth = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2Nzg2MTkzZjNhMmJiN2VhZjIzODIyYjI4N2U0ZmE4NCIsInN1YiI6IjVjZDFlNzQxOTI1MTQxMDQ1NjMwMjI3NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZjxpR8hKUWF196rkA93Mgv9WJP7Msb8EXgfh1fHoNNU\"","export const cleanFetchMovies =(movies)=>{\n  return movies.map(movie=> (\n    {\n      title: movie.title,\n      poster: \n      `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n      backdrop: \n      `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`,\n      summary: movie.overview,\n      rating: movie.vote_average,\n      genres: movie.genres,\n      release: movie.release_date,\n      id: movie.id,\n      isFavorite: false\n    }\n  ))\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const moviesReducer = (state= [], action)=>{\n  switch(action.type) {\n    case 'FETCH_MOVIES':\n      return action.movies;\n    case 'TOGGLE_FAVORITE':\n      let newState = [...state].map(movie => {\n        if (movie.id === action.id) {\n          movie.isFavorite = !movie.isFavorite\n        }\n        return movie\n      })\n      return newState\n    case 'SET_FAVORITES':\n      let stateWithFavorites = [...state].map(movie => {\n        action.favorites.forEach(favorite => {\n          if (favorite.movie_id === movie.id) {\n            movie.isFavorite = !movie.isFavorite\n          }\n        });\n        return movie\n      });\n      return stateWithFavorites\n    default: \n      return state;\n  }\n}\n\nexport default moviesReducer;","const currMovieReducer = (state = {}, action)=>{\n  switch(action.type) {\n    case 'GRAB_MOVIE':\n      return {...action.movie};\n    default: \n      return state;\n  }\n}\n\nexport default currMovieReducer;","const isLoadingReducer = (state = false, action) => {\n  switch(action.type) {\n    case 'IS_LOADING':\n      return action.isLoading;\n    default:\n      return state\n  }\n}\n\nexport default isLoadingReducer;","const errorMessageReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_ERROR_MESSAGE':\n      return action.errorMessage;\n    default: \n      return state\n  }\n}\n\nexport default errorMessageReducer;","import { combineReducers } from 'redux';\nimport moviesReducer from './moviesReducer';\nimport currMovieReducer from './currMovieReducer';\nimport { userReducer } from './userReducer';\nimport isLoadingReducer from './isLoadingReducer';\nimport errorMessageReducer from './errorMessageReducer';\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  currMovie: currMovieReducer,\n  user: userReducer,\n  isLoading: isLoadingReducer,\n  errorMessage: errorMessageReducer\n})\n\nexport default rootReducer;","export const userReducer = (state = {}, action) => {\n  switch(action.type) {\n    case \"LOGIN_USER\":\n      return action.user;\n    case \"SIGNOUT_USER\":\n      return {};\n    default:\n      return state\n  };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nconst store =createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\nReactDOM.render(\n  <Provider store={store}>\n    {router}\n  </ Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}